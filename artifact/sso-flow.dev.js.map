{"mappings":"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","sources":["src/index.ts","src/runSSOFlow.ts","src/logger.ts","src/constants.ts","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","src/types.ts","src/analytics.ts","src/updateHttpFunctions.ts","src/loadScript.ts","src/readCurrentScriptSiteId.ts"],"sourcesContent":["import { runSSOFlow } from \"./runSSOFlow\";\nimport { Auth0_SPA_JS_CDN, ZENDESK_WIDGET_CDN } from \"./constants\";\nimport { loadScript } from \"./loadScript\";\nimport { log } from \"./logger\";\nimport { readCurrentScriptSiteId } from \"./readCurrentScriptSiteId\";\n\nconst siteId = readCurrentScriptSiteId();\nlog(\"siteId\", siteId);\n\nconst promise = loadScript({\n  url: Auth0_SPA_JS_CDN,\n  name: \"Auth0 SPA js\",\n});\n\npromise.then(() => {\n  loadScript({\n    url: ZENDESK_WIDGET_CDN,\n    name: \"Zendesk widget\",\n    idAttribute: \"ze-snippet\",\n  }).then(() => {\n    runSSOFlow({\n      auth0ClientOptions: {\n        domain: \"accounts.talk.sesam.io\",\n        clientId: \"kJpPOS30v8dpD68iRJ7PMdS03Hwvq06X\",\n      },\n      siteId,\n    });\n  });\n});\n","import { log } from \"./logger\";\nimport type { RunSSOFlowArgs } from \"./types\";\nimport { LoginMessageType } from \"./types\";\nimport { pushToDataLayer, sha256 } from \"./analytics\";\nimport { updateHttpFunctions } from \"./updateHttpFunctions\";\nimport { REDIRECT_URI } from \"./constants\";\n\nexport const runSSOFlow = (args: RunSSOFlowArgs) => {\n  const { auth0ClientOptions, siteId } = args;\n\n  log(\"runSSOFlow start\");\n\n  if (!window?.auth0) {\n    log(\"auth0 does not exist!\");\n    return;\n  }\n\n  let auth0Id = \"\";\n  log(\"runSSOFlow ~ auth0Id:\", auth0Id);\n  let zToken = \"\";\n\n  const auth0Client = new window.auth0.Auth0Client(auth0ClientOptions);\n\n  const afterAuthentication = async () => {\n    log(\"afterAuthentication invoked!\");\n\n    const isAuthenticated = await auth0Client.isAuthenticated();\n\n    if (isAuthenticated) {\n      log(\"user is authenticated\");\n      return;\n    }\n\n    const query = window.location.search;\n\n    if (query.includes(\"code=\") && query.includes(\"state=\")) {\n      await auth0Client.handleRedirectCallback();\n      await updateHttpFunctions(auth0Client, auth0Id);\n\n      window.history.replaceState({}, \"\", \"/\");\n    }\n  };\n\n  // I'm not quite sure how Wix works but it's important to note that this window.onload only runs\n  // when we refresh the page - not when going through the pages within the Wix site, In that sense, Wix is SPA-ish\n  window.onload = async () => {\n    log(\"window has loaded\");\n\n    window.zE(\"messenger\", \"hide\");\n  };\n\n  afterAuthentication();\n\n  window.addEventListener(\"message\", async (event) => {\n    if (event.data.auth0Id) {\n      log(\"message data\", event.data);\n      auth0Id = event.data.auth0Id;\n      zToken = event.data.zendeskToken;\n\n      const user = await auth0Client.getUser();\n\n      if (user?.email) {\n        const hashedEmail = await sha256(user.email);\n        // @ts-ignore\n        pushToDataLayer(\"set\", { user_id: hashedEmail });\n      }\n\n      if (zToken) {\n        log(\"message - zToken\", zToken);\n\n        window.zE(\n          \"messenger\",\n          \"loginUser\",\n          function (callback: ZendeskCallbackFn) {\n            callback(zToken);\n            window.zE(\"messenger\", \"show\");\n          }\n        );\n      } else {\n        await updateHttpFunctions(auth0Client, auth0Id);\n      }\n    }\n\n    if (event.data === LoginMessageType.Login) {\n      log(\"message - \", LoginMessageType.Login);\n\n      await auth0Client.loginWithRedirect({\n        authorizationParams: {\n          redirect_uri: REDIRECT_URI,\n          \"ext-site_id\": siteId,\n        },\n      });\n    }\n\n    if (event.data === LoginMessageType.Logout) {\n      log(\"message - \", LoginMessageType.Logout);\n\n      auth0Client.logout({\n        logoutParams: {\n          returnTo: window.location.origin,\n        },\n      });\n    }\n\n    if (event.data === LoginMessageType.Signup) {\n      log(\"message - \", LoginMessageType.Signup);\n\n      auth0Client.loginWithRedirect({\n        authorizationParams: {\n          redirect_uri: REDIRECT_URI,\n          screen_hint: \"signup\",\n          \"ext-site_id\": siteId,\n        },\n      });\n    }\n  });\n};\n","import { LOG_STORAGE_KEY } from \"./constants\";\n\nconst getLoggerFn =\n  (enabled = false) =>\n  (title: string, ...args: any[]) => {\n    if (!enabled) {\n      return;\n    }\n\n    console.info(\n      `SSO FLow - ${title}`,\n      args.length ? args : \"\",\n      new Date().toLocaleTimeString()\n    );\n  };\n\nconst enabled = Boolean(localStorage.getItem(LOG_STORAGE_KEY));\n\nexport const log = getLoggerFn(enabled);\n","export const Auth0_SPA_JS_CDN =\n  \"https://cdn.auth0.com/js/auth0-spa-js/2.0/auth0-spa-js.production.js\";\n\nexport const ZENDESK_WIDGET_CDN =\n  \"https://static.zdassets.com/ekr/snippet.js?key=eb7f5552-be33-4b0f-a55d-ce9a8a7aa975\";\n\nexport const LOG_STORAGE_KEY = \"_logSSOFlow_\";\n\nexport const REDIRECT_URI = `${window.location.origin}/callback`;\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","import type { Auth0ClientOptions } from \"@auth0/auth0-spa-js\";\n\nexport enum LoginMessageType {\n  Login = \"auth0:login\",\n  Logout = \"auth0:logout\",\n  Signup = \"auth0:signup\",\n}\n\nexport type RunSSOFlowArgs = {\n  auth0ClientOptions: Auth0ClientOptions;\n  siteId?: string | \"\";\n};\n\nexport type LoadScriptArgs = {\n  name: string;\n  idAttribute?: string;\n  url: string;\n};\n\n// The datalayer object is set on the window object by the Google Analytics script\n// it can be used to configure GA, set options or send specific events\ndeclare global {\n  interface Window {\n    dataLayer: any[];\n  }\n}\n","import { log } from \"./logger\";\n\nconst waitForDataLayer = (callback: Function, attempt = 0) => {\n  log(\"Waiting for GA dataLayer\", JSON.stringify(window.dataLayer), \". Attempt: \", attempt);\n  const max_attempts = 10;\n  if (attempt > max_attempts) {\n    log(\"Waiting for GA dataLayer: Max attempts reached.\")\n    return;\n  }\n  if (window.dataLayer) {\n    log(\"GA dataLayer found\");\n    callback();\n  } else {\n    setTimeout(function () {\n      waitForDataLayer(callback, attempt + 1);\n    }, 500);\n  }\n};\n\n/**\n * Configure the GA object, set parameters or send events\n * This code is modified from the pure-js code given by Google Analytics that looks like this\n *   window.dataLayer = window.dataLayer || [];\n *   function gtag(){dataLayer.push(arguments);}\n *   gtag('js', new Date());\n *   gtag('config', '<id>');\n * @param args arbitrary arguments to the Google Analytics object (set, event, etc.\n */\nexport function pushToDataLayer() {\n  log(\"Attempting to push user_id to GA dataLayer.\")\n  const args = arguments;\n  waitForDataLayer(() => {\n    log(\"Setting the user-id\");\n    window.dataLayer.push(args);\n    log(\"window.dataLayer after pushing\", window.dataLayer);\n  });\n};\n\nexport async function sha256(message: string): Promise<string> {\n  // encode as UTF-8\n  const msgBuffer = new TextEncoder().encode(message);\n\n  // hash the message\n  const hashBuffer = await crypto.subtle.digest('SHA-256', msgBuffer);\n\n  // convert ArrayBuffer to Array\n  const hashArray = Array.from(new Uint8Array(hashBuffer));\n\n  // convert bytes to hex string                  \n  const hashHex = hashArray.map(b => b.toString(16).padStart(2, '0')).join('');\n  return hashHex;\n}\n","import type { Auth0Client } from \"@auth0/auth0-spa-js\";\nimport { log } from \"./logger\";\n\nexport const updateHttpFunctions = (\n  auth0Client: Auth0Client,\n  auth0Id: string\n) => {\n  return new Promise<void>(async (resolve, _reject) => {\n    log(\"updateHttpFunctions called\");\n\n    const user = await auth0Client.getUser();\n\n    if (!user) {\n      log(\"updateHttpFunctions -> user not logged-in!\");\n      return;\n    }\n\n    if (!auth0Id) {\n      log(\"updateHttpFunctions -> auth0Id is not defined!\");\n      return;\n    }\n\n    try {\n      await fetch(window.location.origin + \"/_functions/auth0/\" + auth0Id, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ user }),\n      });\n\n      const token = await auth0Client.getTokenSilently();\n\n      await fetch(window.location.origin + \"/_functions/auth0/\" + auth0Id, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ token }),\n      });\n\n      resolve();\n    } catch (err) {\n      console.error(\"fetch error: \", err);\n      _reject();\n    }\n  });\n};\n","import { log } from \"./logger\";\nimport { LoadScriptArgs } from \"./types\";\n\nexport const loadScript = (args: LoadScriptArgs) => {\n  const { url, idAttribute, name } = args;\n\n  return new Promise<void>((resolve, _reject) => {\n    const head = document.head;\n    const script = document.createElement(\"script\");\n    script.type = \"text/javascript\";\n    script.src = url;\n    script.id = idAttribute ?? \"\";\n\n    script.onload = () => {\n      log(`${name} script loaded`);\n\n      resolve();\n    };\n\n    head.appendChild(script);\n  });\n};\n","export const readCurrentScriptSiteId = () =>\n  document?.currentScript?.attributes.getNamedItem(\"data-siteid\")?.value;\n"],"names":[],"version":3,"file":"sso-flow.dev.js.map"}